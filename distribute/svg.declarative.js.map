{"version":3,"sources":["webpack:///webpack/bootstrap 4b03a458af664fa10497","webpack:///./source/affine.js","webpack:///./source/declarative.js","webpack:///./source/controlled.js","webpack:///./source/controllers.js","webpack:///./source/drawloop.js","webpack:///./source/queue.js"],"names":["decompose","compose","mag","a","b","Math","sqrt","unitCircle","thetaRad","atan2","thetaDeg","PI","cos","sin","matrix","cx","cy","c","d","e","f","theta","ct","st","signX","sign","sx","lam","signY","sy","tx","ty","parameters","translateX","translateY","scaleX","scaleY","shear","SVG","Matrix","timer","performance","draw","declarative","invent","parent","Element","create","element","convergenceThreshold","activeController","useLast","nextFrame","targetTime","playSpeed","paused","useAffine","bbox","transformTarget","transform","proposedTransforms","_resetTransformProposal","targets","method","timeout","inputs","affine","get","found","find","item","toOrigin","fromOrigin","transformOrigin","around","construct","controller","chaser","now","extend","pause","state","step","continue","override","should","time","dt","lastTime","convergence","target","inputValues","parameter","newValue","value","push","modified","modifier","methodName","split","frame","bind","speed","newSpeed","newController","matrixC","ox","oy","x","y","width","height","string","toLowerCase","trim","endsWith","startsWith","inverse","center","threshold","newThreshold","delay","snap","input","_addTarget","initials","waitFor","max","cancelTimeout","argumentsControlled","init","i","length","start","undefined","controlled","methodArgument","newTarget","_bakeTransforms","translation","rotation","scale","flip","skew","multiply","_attrStyle","key","type","obj","hasOwnProperty","startValue","attr","style","relative","G","currentY","move","oX","oY","rotate","s","translate","isFinite","direction","lamX","lamY","position","fill","color","opacity","stroke","lineCap","dashArray","amount","controllers","spring","Control","ConstantC","constant","NumberC","min","reset","currentTarget","Number","error","velocity","acceleration","integral","sNew","vNew","aNew","newError","abs","CircularC","range","getError","circularDifference","mod","diff","circular","angle","n","floor","MatrixC","currentMatrix","thetaController","toggled","Boolean","v","forEach","number","map","concat","values","ArrayC","colorString","numbers","StringC","template","replace","window","match","ColorC","Array","parseInt","hexMatch","regex","hex","rgbMatch","rgb","splice","valueString","join","rgbString","isHex","test","isRgb","arguments","matches","settleTime","overShoot","eps","os","zeta","log","wn","D","K","control","DrawLoop","nextDraw","frames","timeouts","frameCount","timeoutCount","drawIt","_draw","id","run","requestAnimationFrame","thisId","index","remove","t","tracking","nextTimeout","lastTimeoutId","peekLast","shift","lastFrameId","peek","Queue","first","last","node","next","matcher","previous","current"],"mappings":"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","file":"svg.declarative.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4b03a458af664fa10497","\nfunction mag (a, b) {\n    return Math.sqrt(a * a + b * b)\n}\n\nfunction unitCircle (a, b) {\n    let thetaRad = Math.atan2(b, a)\n    let thetaDeg = thetaRad * 180 / Math.PI\n    let cos = Math.cos(thetaRad)\n    let sin = Math.sin(thetaRad)\n    return [thetaDeg, cos, sin]\n}\n\nexport function decompose (matrix, cx, cy) {\n\n    // Get the paramaters of the current matrix\n    let {a, b, c, d, e, f} = matrix\n\n    // Construct the parameters\n    let [theta, ct, st] = unitCircle (a, b)\n    let signX = Math.sign(a * ct + b * st)\n    let sx = signX * mag (a, b)\n    let lam = (st * d + ct * c) / (ct * a + st * b)\n    let signY = Math.sign(- c * st + d * ct)\n    let sy = mag (lam * a - c, d - lam * b)\n    let tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\n    let ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\n\n    // Package and return the parameters\n    let parameters = {\n        translateX: tx,\n        translateY: ty,\n        theta: theta,\n        scaleX: sx,\n        scaleY: sy,\n        shear: lam,\n    }\n    return parameters\n}\n\nexport function compose (tx, ty, theta, sx, sy, lam, cx, cy) {\n\n    // Calculate the trigonometric values\n    let [ct, st] = [Math.cos(theta * Math.PI / 180),\n                    Math.sin(theta * Math.PI / 180)]\n\n    // Calculate the matrix components directly\n    let a = sx * ct\n    let b = sx * st\n    let c = lam * sx * ct - sy * st\n    let d = lam * sx * st + sy * ct\n    let e = - sx * ct * (cx + cy * lam) + sy * st * cy + tx + cx\n    let f = - sx * st * (cx + cy * lam) - sy * ct * cy + ty + cy\n\n    // Construct a new matrix and return it\n    let matrix = new SVG.Matrix([a, b, c, d, e, f])\n    return matrix\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/affine.js","\nimport {compose, decompose} from \"declarative/affine\"\nimport Control from \"declarative/controlled\"\nimport {spring} from \"declarative/controllers\"\nimport {DrawLoop} from \"declarative/drawloop\"\n\nlet timer = performance\nlet draw = new DrawLoop()\n\nSVG.declarative = SVG.invent({\n\n    parent: SVG.Element\n\n,   create: function (element) {\n\n        // Store the element\n        this.element = element\n\n        // The controller is in charge of moving our object towards its\n        // desired state directly.\n        this.convergenceThreshold = 1e-6\n        this.activeController = null\n        this.useLast = false\n        this.nextFrame = null\n        this.targetTime = null\n        this.playSpeed = 1\n        this.paused = false\n\n        // Keep track of the state that we want our object to be in\n        this.useAffine = true\n        let {cx, cy} = element.bbox()\n        this.transformTarget = element.transform().matrix\n        this.proposedTransforms = {}\n        this._resetTransformProposal()\n        this.targets = [\n\n            // A target should have the following format. Note that\n            // modifiers are functions that take the inputs and return them\n            // in a format suitable for the method\n            //\n            // {\n            //      methodName (attr_fill, style_width, cx, cy, ...)\n            //      modifier: function\n            //      inputs: [\n            //          any class from controlled\n            //      ]\n            // }\n            { // Transformations\n                method: \"transform\",\n                timeout: null,\n                inputs: [\n                    Control(this.transformTarget, cx, cy)\n                        .affine(this.useAffine)\n                ],\n            },\n        ]\n        this.targets.get = function (method) {\n            let found = this.find(item=> item.method == method)\n            return found\n        }\n\n        // Set the transformation origin for absolute transforms\n        this.toOrigin = null\n        this.fromOrigin = null\n        this.transformOrigin = null\n        this.around(cx, cy)\n    }\n\n,   construct: {\n\n        declarative: function (controller) {\n\n            if (this.chaser) {\n\n                if (controller)\n                    this.chaser.controller(controller)\n\n            } else {\n                this.chaser = new SVG\n                    .declarative(this)\n                    .controller(controller)\n            }\n\n            // Set the time for the next tick\n            this.chaser.targetTime = timer.now()\n            return this.chaser\n        }\n    }\n\n,   extend: {\n\n    /**\n     * Methods that directly modify the simulation\n     */\n\n        pause: function (state=true) {\n            this.paused = state\n            if (this.paused == false)\n                this.step()\n            return this\n        }\n\n    ,   continue: function () {\n            if (this.paused) return\n            if (!this.nextFrame)\n                this.step()\n            return this\n        }\n\n    ,   override: function (should=true) {\n            this.useLast = should\n            return this\n        }\n\n    ,   step: function (time) {\n\n            // If we are paused, just exit\n            if (this.paused) return\n\n            // Get the time delta\n            let dt = this.playSpeed * ((time - this.lastTime) || 16) / 1000\n            dt = dt < 0.1 ? dt : 0.016 // If we missed alot of time, ignore\n            this.lastTime = time\n\n            // Loop through all of the targets and update them based on\n            // the controllers input instruction\n            let convergence = 0\n            let controller = this.activeController\n            for (let target of this.targets) {\n\n                // Loop through all of the controllers and update them\n                let inputValues = []\n                for (let parameter of target.inputs) {\n                    convergence += parameter.step(controller, dt)\n                    let newValue = parameter.value()\n                    inputValues.push(newValue)\n                }\n\n                // Call the modifier to get the parameters in the right\n                // format for the method\n                let modified = inputValues\n                if (target.modifier) {\n                    modified = target.modifier(inputValues)\n                }\n\n                // Call the correct method on the target object\n                let methodName = target.method.split(\"_\")[0]\n                this.element[methodName](...modified)\n            }\n\n            // Get the next animation frame to keep the simulation going\n            if (convergence > this.convergenceThreshold)\n                this.nextFrame = draw.frame(this.step.bind(this))\n            else this.nextFrame = null\n            return this\n        }\n\n    ,   speed: function (newSpeed) {\n            this.playSpeed = newSpeed\n            return this\n        }\n\n    ,   controller: function (newController= spring()) {\n            this.activeController = newController\n            return this\n        }\n\n    ,   affine: function (useAffine=true) {\n\n            // If useAffine is true, transformations will occur in an\n            // affine manner, otherwise, we will directly morph abcdef\n            this.useAffine = useAffine\n            let [matrixC] = this.targets.get(\"transform\").inputs\n            matrixC.affine(useAffine)\n            return this\n        }\n\n    ,   around: function (ox, oy) {\n\n        if (typeof ox == \"string\") {\n\n            // Get the bounding box and the string provided\n            let {x, y, width, height} = this.element.bbox()\n            let string = ox.toLowerCase().trim()\n\n            // Set the bounds eg : \"bottom-left\", \"Top right\", \"middle\" etc...\n            ox = string.endsWith(\"left\") ? x\n                : string.endsWith(\"right\") ? x + width\n                : x + width / 2\n            oy = string.startsWith(\"top\") ? y\n                : string.startsWith(\"bottom\") ? y + height\n                : y + height / 2\n        }\n\n        // Sets the transformation origin explicitly, by default, the\n        // transform origin is around the center of the bbox\n        this.transformOrigin = [ox, oy]\n        this.fromOrigin = new SVG.Matrix([1, 0, 0, 1, ox, oy])\n        this.toOrigin = this.fromOrigin.inverse()\n\n        // Also change the origin for the matrix controller\n        let [matrixC] = this.targets.get(\"transform\").inputs\n        matrixC.center(ox, oy)\n        return this\n    }\n\n    ,   threshold: function (newThreshold) {\n            this.threshold = newThreshold\n            return this\n        }\n\n    ,   delay: function (time) {\n            this.targetTime += time / this.playSpeed\n            return this\n        }\n\n    ,   snap: function () {\n\n        // Immediately snaps every controller to their current target and\n        // zeros out their velocities\n        for (let target of this.targets)\n            for (let input of target.inputs)\n                input.snap()\n\n        // Continue if we've stopped\n        this.continue()\n    }\n\n    /**\n     * Methods that modify the current targets\n     */\n\n    ,   _addTarget: function (\n            method, targets=[], initials=()=>[], modifier\n        ) {\n\n            // Work out when to continue\n            let waitFor = Math.max(0, this.targetTime - timer.now())\n            let target = this.targets.get(method)\n\n            // If the target already exists, delete its timeout\n            if (target) {\n                if (this.useLast) draw.cancelTimeout(target.timeout)\n\n            // If the target doesn't exist, we have to check if it\n            // is possible to control and if so, assign it a controller\n            } else {\n\n                // Loop through all of the inputs, and if they are\n                // numeric then we have to make them into controllers\n                let argumentsControlled = []\n                let init = initials()\n                for (let i = 0 ; i < targets.length ; i++) {\n                    let start = init[i] === undefined\n                        ? targets[i]\n                        : init[i]\n                    let controlled = Control(start)\n                    argumentsControlled.push(controlled)\n                }\n\n                // Construct the target for this method\n                target = {\n                    method: method,\n                    inputs: argumentsControlled,\n                    modifier: modifier,\n                }\n                this.targets.push (target)\n            }\n\n            // Wait for the correct time then change the targets\n            target.timeout = draw.timeout(()=> {\n\n                // Set the new targets provided directly\n                for (let i = 0 ; i < targets.length; i++) {\n                    let methodArgument = target.inputs[i]\n                    let newTarget = targets[i]\n                    methodArgument.target(newTarget)\n                }\n\n                // Continue the animation in case it stopped\n                this.continue()\n\n            }, waitFor)\n        }\n\n    ,   _bakeTransforms: function () {\n\n            // Calculate the net matrix\n            let {\n                translation, rotation, scale, flip, skew\n            } = this.proposedTransforms\n            this.transformTarget = translation\n                .multiply(this.fromOrigin)\n                .multiply(rotation)\n                .multiply(scale)\n                .multiply(flip)\n                .multiply(skew)\n                .multiply(this.toOrigin)\n\n            // Add the target for the new transform\n            this._addTarget(\"transform\", [this.transformTarget])\n        }\n\n    ,   _resetTransformProposal: function () {\n\n            this.proposedTransforms = {\n                translation: new SVG.Matrix(),\n                rotation: new SVG.Matrix(),\n                scale: new SVG.Matrix(),\n                flip: new SVG.Matrix(),\n                skew: new SVG.Matrix(),\n            }\n        }\n\n    ,   _attrStyle: function (key, value, type) {\n\n            if (typeof key == 'object') {\n\n                // We are dealing with an object, so loop over it\n                let obj = key\n\n                // Iterate over the keys and values and run them\n                for (let key in obj) if (obj.hasOwnProperty(key)) {\n                    this[type](key, obj[key])\n                }\n\n            } else {\n                let startValue = ()=> [key, this.element[type](key)]\n                this._addTarget(`${type}_${key}`, [key, value], startValue)\n            }\n        }\n\n    // Properties\n\n    ,   attr: function (key, value) {\n            this._attrStyle(key, value, \"attr\")\n            return this\n        }\n\n    ,   style: function (key, value) {\n            this._attrStyle(key, value, \"style\")\n            return this\n        }\n\n    // Basic movements\n\n    ,   x: function (x, relative) {\n\n            if (this.element instanceof SVG.G) {\n\n                // TODO: Deal with groups by using a transform\n\n            } else {\n\n                // Add an x target directly\n                this._addTarget(\"x\",\n                    [relative ? x + this.element.x() : x],\n                    ()=> [this.element.x()])\n            }\n            return this\n        }\n\n    ,   y: function (y, relative) {\n\n            if (this.element instanceof SVG.G) {\n\n                // TODO: Deal with groups by using a transform\n\n            } else {\n\n                // Add a y target directly\n                this._addTarget(\"y\",\n                    [relative ? y + currentY : y],\n                    ()=> [this.element.y()])\n            }\n            return this\n        }\n\n    ,   move: function (x, y, relative) {\n            this.x(x, relative).y(y, relative)\n            return this\n        }\n\n    ,   cx: function (x, relative) {\n\n            // Get the bounding boxes width to subtract off of the x\n            let oX = this.element.bbox().width / 2\n            this.x(x - oX, relative)\n            return this\n        }\n\n    ,   cy: function (y, relative) {\n\n            // Get the bounding boxes width to subtract off of the x\n            let oY = this.element.bbox().height / 2\n            this.y(y - oY, relative)\n            return this\n        }\n\n    ,   center: function (x, y, relative) {\n            this.cx(x, relative).cy(y, relative)\n            return this\n        }\n\n    // Transformations\n\n    ,   matrix: function (matrix, relative=false) {\n\n            this._resetTransformProposal()\n            this.transformTarget = relative\n                ? this.transformTarget.multiply(matrix)\n                : matrix\n            this._addTarget(\"transform\", [this.transformTarget])\n            return this\n        }\n\n    ,   rotate: function (theta, relative=false) {\n\n            // Calculate the rotation matrix\n            let thetaRad = Math.PI * theta / 180\n            let [c, s] = [Math.cos(thetaRad), Math.sin(thetaRad)]\n            let rotation = new SVG.Matrix([c, s, -s, c, 0 , 0])\n\n            // We set the proposed transform and bake it if necessary,\n            // otherwise, we just apply it as a relative matrix\n            this.proposedTransforms.rotation = rotation\n            if (relative) this.matrix(rotation, relative)\n            else this._bakeTransforms()\n            return this\n        }\n\n    ,   translate: function (x, y, relative=false) {\n\n            // Construct the matrix\n            let translation = new SVG.Matrix([1, 0, 0, 1, x, y])\n\n            // We set the proposed transform and bake it if necessary,\n            // otherwise, we just apply it as a relative matrix\n            this.proposedTransforms.translation = translation\n            if (relative) this.matrix(translation, relative)\n            else this._bakeTransforms()\n            return this\n        }\n\n    ,   scale: function (sx, sy, relative=false) {\n\n            // The user can provide only one scale for a proportional scale\n            if (!isFinite(sy)) {\n                relative = sy || relative\n                sy = sx\n            }\n\n            // Build the scale matrix\n            let scale = new SVG.Matrix([sx, 0, 0, sy, 0, 0])\n\n            // We set the proposed transform and bake it if necessary,\n            // otherwise, we just apply it as a relative matrix\n            this.proposedTransforms.scale = scale\n            if (relative) this.matrix(scale, relative)\n            else this._bakeTransforms()\n            return this\n        }\n\n    ,   flip: function (direction=\"x\", relative=false) {\n\n            // Build the flip matrix\n            if (relative) {\n                let flip = new SVG.Matrix()\n                flip[direction == \"x\" ? \"a\" : \"d\"] = -1\n                this.matrix(scale, relative)\n\n            } else {\n\n                // Flip the respective entry in the flip matrix\n                this.proposedTransforms\n                    .flip[direction == \"x\" ? \"a\" : \"d\"] *= -1\n                this._bakeTransforms()\n            }\n            return this\n        }\n\n    ,   skew: function (lamX, lamY, relative=false) {\n\n            // The user can provide only one skew for a proportional skew\n            if (!isFinite(sy)) {\n                relative = lamY || relative\n                lamY = lamX\n            }\n\n            // Calculate the skew matrix\n            let skew = new SVG.Matrix([1, lamY, lamX, 1, 0, 0])\n\n            // Modify the current matrix\n            this.proposedTransforms.skew = skew\n            if (relative) this.matrix(skew, relative)\n            else this._bakeTransforms()\n            return this\n        }\n\n    // Syntax Sugar\n\n    ,   position: function (x, y) {\n\n            // Forcibly place the center at the x, y position given\n            let [cx, cy] = this.transformOrigin\n            this.translate(x - cx, y - cy, false)\n            return this\n        }\n\n    ,   width: function (item) {\n            this.attr(\"width\", item)\n            return this\n        }\n\n    ,   height: function (item) {\n            this.attr(\"height\", item)\n            return this\n        }\n\n    ,   fill: function (item) {\n\n            // Strings are always assumed to be fills\n            if (typeof item == \"string\") {\n\n                this.attr(\"fill\", item)\n\n            // If we have an object, set the individual attributes\n            } else if (typeof item == \"object\") {\n\n                if(item.color)\n                    this.attr(\"fill\", item.color)\n\n                if(item.opacity)\n                    this.attr(\"fill-opacity\", item.opacity)\n            }\n            return this\n        }\n\n    ,   stroke: function (item) {\n\n            // If we have an object, set the individual attributes\n            if (typeof item == \"string\") {\n\n                this.attr(\"stroke\", item)\n\n            } else if (typeof item == \"object\") {\n\n                if(item.color)\n                    this.attr(\"stroke\", item.color)\n\n                if(item.opacity)\n                    this.attr(\"stroke-opacity\", item.opacity)\n\n                if(item.width)\n                    this.attr(\"stroke-width\", item.width)\n\n                if(item.lineCap)\n                    this.attr(\"stroke-linecap\", item.lineCap)\n\n                if(item.dashArray)\n                    this.attr(\"stroke-dasharray\", item.dashArray)\n            }\n            return this\n        }\n\n    ,   opacity: function (amount) {\n            this.attr(\"opacity\", amount)\n            return this\n        }\n\n    }\n})\n\nSVG.controllers = {\n    spring: spring,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/declarative.js","\nimport {compose, decompose} from \"declarative/affine\"\n\n\nclass ConstantC {\n    constructor (value) {\n        this.target(value)\n    }\n\n    target (value) {\n        this.constant = value\n    }\n\n    value () {\n        return this.constant\n    }\n\n    step (controller, dt) {\n        return 0\n    }\n\n    snap () {\n        // Does nothing.\n    }\n}\n\n\nclass NumberC {\n\n    constructor (target, min, max) {\n        this.reset(target)\n        this.min = min\n        this.max = max\n    }\n\n    reset (newValue) {\n        this.currentTarget = Number(newValue)\n        this.position = Number(newValue)\n        this.error = 0\n        this.velocity = 0\n        this.acceleration = 0\n        this.integral = 0\n    }\n\n    target (newTarget) {\n        if (isFinite(newTarget)) {\n            this.currentTarget = Number(newTarget)\n            this.error = this.position - this.currentTarget\n        }\n        return this.currentTarget\n    }\n\n    value () {\n        let value = value < this.min ? this.min\n            : value > this.max ? this.max\n            : this.position\n        return this.position\n    }\n\n    step (controller, dt) {\n\n        // Use the controller to determine what the new parameters should be\n        let [sNew, vNew, aNew] = controller(\n            this.error, this.velocity, this.acceleration, this.integral)\n        this.position = isFinite(sNew) ? sNew : this.position\n        this.velocity = isFinite(vNew) ? vNew : this.velocity\n        this.acceleration = isFinite(aNew) ? aNew : this.acceleration\n\n        // Use Eulers method to update the velocity and the error\n        this.position += this.velocity * dt + this.acceleration * dt * dt / 2\n        this.velocity += this.acceleration * dt\n\n        // Use the position to calculate the new error and its integral\n        let newError = this.position - this.currentTarget\n        this.integral += dt * (this.error +  newError) / 2 // Trapezoidal rule\n        this.error = newError\n\n        // If the controller isn't doing anything, we consider it converged\n        let convergence = Math.abs((sNew || 0) + (vNew || 0) + (aNew || 0))\n        return convergence\n    }\n\n    snap () {\n        this.position = this.currentTarget\n        this.velocity = 0\n        this.acceleration = 0\n        this.integral = 0\n        this.error = 0\n    }\n}\n\nclass CircularC extends NumberC {\n\n    constructor (target, min, max) {\n        super(target, min, max)\n        this.range = max - min\n        this.getError = CircularC.circularDifference(min, max)\n    }\n\n    target (newTarget) {\n        if (isFinite(newTarget)) {\n            this.currentTarget = Number(newTarget)\n            this.error = this.getError(this.currentTarget, this.position)\n        }\n        return this.currentTarget\n    }\n\n    step (controller, dt) {\n\n        this.position = this.min + CircularC.mod(this.position, this.range)\n        this.error = this.getError(this.position - this.min, this.currentTarget)\n        let convergence = super.step(controller, dt)\n        return convergence\n    }\n\n    static circularDifference(min, max) {\n\n        // Form the circular difference function\n        let diff = max - min\n        function circular (target, angle) {\n            return CircularC.mod(target - angle + diff / 2, diff) - diff / 2\n        }\n        return circular\n    }\n\n    // Define a modulo function since javascript doesn't behave properly\n    static mod (a, n) {\n        return a - n * Math.floor(a / n)\n    }\n}\n\n\nclass MatrixC {\n\n    constructor (matrix= new SVG.Matrix(), cx= 0, cy= 0) {\n\n        // Store all of the parameters\n        this.currentMatrix = matrix\n        this.thetaController = new CircularC(0, 0, 360)\n        this.controllers = [\n            new NumberC(matrix.a), new NumberC(matrix.b),\n            new NumberC(matrix.c), new NumberC(matrix.d),\n            new NumberC(matrix.e), new NumberC(matrix.f)\n        ]\n\n        // If we want an affine transformation, we find the parameters\n        this.cx = cx\n        this.cy = cy\n        this.useAffine = false // If true, it will be set below\n    }\n\n    center (cx, cy) {\n        this.cx = cx\n        this.cy = cy\n        return this\n    }\n\n    affine (useAffine=true) {\n\n        // Work out if we need to modify the targets\n        let toggled = Boolean(this.useAffine ^ useAffine)\n        this.useAffine = useAffine\n\n        // Convert the targets to affine or vice versa\n        if (toggled) this.target(this.currentMatrix, true)\n        return this\n    }\n\n    target (matrix, reset=false) {\n\n        // Extract the parameters\n        let v = null\n        if (this.useAffine) {\n\n            // Decompose the matrix into its parameters\n            let {\n                translateX, translateY, theta, scaleX, scaleY, shear\n            } = decompose(matrix, this.cx, this.cy)\n            v = [translateX, translateY, theta, scaleX, scaleY, shear]\n\n            // Set the angular controller correctly\n            this.thetaController[reset ? \"reset\" : \"target\"](theta)\n\n        } else {\n            v = [matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f]\n        }\n\n        // Set the new target for each controller\n        this.controllers.forEach((c, i)=> c[reset ? \"reset\" : \"target\"](v[i]))\n    }\n\n    value () {\n        return this.currentMatrix\n    }\n\n    step (controller, dt) {\n\n        // Step through all of the numbers, updating them\n        let convergence = 0\n        for (let number of this.controllers) {\n            convergence += number.step(controller, dt)\n        }\n\n        // Extract the current matrix from this\n        if (this.useAffine) {\n\n            // Get the affine parameters and add on the center point\n            let parameters = this.controllers\n                .map(c=> c.value())\n                .concat([this.cx, this.cy])\n\n            // Replace the theta value for the one from the theta controller\n            convergence += this.thetaController.step(controller, dt)\n            parameters[2] = this.thetaController.value()\n\n            // Compose the affine parameters into a matrix\n            this.currentMatrix = compose(...parameters)\n\n        } else {\n\n            // If we are not using affine transforms, just return directly\n            let values = this.controllers.map(c=> c.value())\n            this.currentMatrix = new SVG.Matrix(values)\n        }\n\n        // Return the convergence error\n        return convergence\n    }\n\n    snap () {\n\n        // Snap the main controllers\n        for (let controller of this.controllers) {\n            controller.snap()\n        }\n\n        // Snap the theta controller\n        this.thetaController.snap()\n    }\n}\n\n\nclass ArrayC {\n\n    constructor (string) {\n    }\n\n    target (colorString) {\n    }\n\n    value () {\n    }\n\n    step (controller, dt) {\n    }\n\n    static matches (item) {\n    }\n}\n\n\n// TODO: Allow svg d elements to animate by picking out their numbers and\n// replacing them all\nlet numbers = /[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?/i\nclass StringC {\n\n    construct (string) {\n\n        //\n        this.values = []\n        this.template = string.replace(numbers, match=> {\n\n            // Parse the match as a number\n            let value = window.Number(match)\n            let controller = new Number()\n            return \"__v__\"\n        })\n    }\n\n    target (colorString) {\n    }\n\n    value () {\n    }\n\n    step (controller, dt) {\n    }\n\n    static matches (item) {\n    }\n}\n\n\nclass ColorC {\n\n    constructor (string) {\n        this.targets = [new NumberC (0), new NumberC (0), new NumberC (0)]\n        this.target(string)\n    }\n\n    target (color) {\n\n        // Get the new values from the color\n        let values = null\n        if (color instanceof Array) {\n            values = color.map(v=> parseInt(v))\n\n        } else if (typeof color == \"string\") {\n\n            let hexMatch = color.match(SVG.regex.hex)\n            let rgbMatch = color.match(SVG.regex.rgb)\n            values = hexMatch\n                ? hexMatch.splice(1).map(v=> parseInt(v, 16))\n                : rgbMatch.splice(1).map(v=> parseInt(v))\n\n        } else return\n\n        // Set the new targets\n        this.targets.forEach((target, i)=> target.target(values[i]))\n\n        // Return the values for use\n        return values\n    }\n\n    value () {\n\n        // Get the numbers and bound them to an int between [0, 255]\n        let values = this.targets.map(v=> {\n            let value = Math.floor(v.value())\n            value = value < 0 ? 0\n                : value > 255 ? 255\n                : value\n            return value\n        })\n        let valueString = values.join(\", \")\n        let rgbString = `rgb(${valueString})`\n        return rgbString\n    }\n\n    step (controller, dt) {\n        let convergence = 0\n        for (let target of this.targets)\n            convergence += target.step(controller, dt)\n        return convergence\n    }\n\n    snap () {\n        for (let controller of this.targets)\n            controller.snap()\n    }\n\n    static matches (item) {\n        if (typeof item !== \"string\") return false\n        let isHex = SVG.regex.isHex.test(item)\n        let isRgb = SVG.regex.isRgb.test(item)\n        return isRgb || isHex\n    }\n}\n\n\nexport default function Control (value) {\n\n    // If we have any of the correct types, then we should control them\n    if (value instanceof SVG.Matrix)\n        return new MatrixC(...arguments)\n    else if (ColorC.matches(value))\n        return new ColorC(...arguments)\n    else if (isFinite(value))\n        return new NumberC(...arguments)\n    else return new ConstantC(...arguments)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/controlled.js","\nexport function spring ({\n    settleTime=500,\n    overShoot=15,\n}={}) {\n\n    // Calculate the PID natural response\n    let eps = 1e-10\n    let os = overShoot / 100 + eps\n    let zeta = - Math.log(os) / Math.sqrt(Math.PI ** 2 + Math.log(os) ** 2)\n    let wn = 4 / (zeta * settleTime / 1000)\n\n    // Calculate the Spring values\n    let D = 2 * zeta * wn\n    let K = wn * wn\n\n    // Return the acceleration required\n    return function (error, velocity, acceleration, integral) {\n        let control = - D * velocity - K * error\n        return [,, control]\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/controllers.js","\nimport Queue from \"declarative/queue\"\n\nexport class DrawLoop {\n\n    constructor () {\n        this.nextDraw = null\n        this.frames = new Queue()\n        this.timeouts = new Queue()\n        this.frameCount = 0\n        this.timeoutCount = 0\n        this.timer = performance\n        this.drawIt = this._draw.bind(this)\n    }\n\n    frame (method) {\n        this.frames.push({\n            id: this.frameCount,\n            run: method\n        })\n        if (this.nextDraw === null)\n            this.nextDraw = requestAnimationFrame(this.drawIt)\n        return this.frameCount++\n    }\n\n    timeout (method, delay=0) {\n\n        // Work out when the event should fire\n        let time = this.timer.now() + delay\n\n        // Add the timeout to the end of the queue\n        let thisId = this.timeoutCount++\n        this.timeouts.push({\n            id: thisId,\n            run: method,\n            time: time,\n        })\n\n        // Request another animation frame if we need one\n        if (this.nextDraw === null)\n            this.nextDraw = requestAnimationFrame(this.drawIt)\n        return thisId\n    }\n\n    cancelTimeout (id) {\n\n        // Find the index of the timeout to cancel and remove it\n        let index = this.timeouts.remove(t=> t.id == id)\n    }\n\n    _draw (now) {\n\n        // Run all the timeouts we can run, if they are not ready yet, add them\n        // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\n        let tracking = true, nextTimeout = null\n        let lastTimeoutId = (this.timeouts.peekLast() &&\n            this.timeouts.peekLast().id)\n        while (tracking && (nextTimeout = this.timeouts.shift())) {\n\n            // If we hit the last item, we should stop shifting out more items\n            if (nextTimeout.id == lastTimeoutId) tracking = false\n\n            // Run the timeout if its time, or push it to the end\n            if (now > nextTimeout.time) nextTimeout.run()\n            else this.timeouts.push(nextTimeout)\n        }\n\n        // Run all of the frames available up until this point\n        let lastFrameId = this.frameCount\n        while (this.frames.peek() && this.frames.peek().id < lastFrameId) {\n            let nextFrame = this.frames.shift()\n            nextFrame.run(now)\n        }\n\n        // If we have remaining timeouts or frames, draw until we don't anymore\n        this.nextDraw = this.timeouts.length > 0 || this.frames.length > 0\n            ? requestAnimationFrame(this.drawIt)\n            : null\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/drawloop.js","\nexport default class Queue {\n\n    constructor () {\n        this.first = undefined\n        this.last = undefined\n        this.length = 0\n        this.id = 0\n    }\n\n    push (value) {\n        let node = {id: this.id++, value : value}\n        if (this.last) this.last = this.last.next = node\n        else this.last = this.first = node\n        this.length++\n    }\n\n    shift () {\n        if (this.length == 0) return\n        let remove = this.first\n        this.first = remove.next\n        this.last = --this.length ? this.last : undefined\n        return remove.value\n    }\n\n    peek () {\n        if (this.first) return this.first.value\n    }\n\n    peekLast () {\n        if (this.last) return this.last.value\n    }\n\n    remove (matcher) {\n\n        // Find the first match\n        let previous = null, current = this.first\n        while (current) {\n\n            // If we have a match, we are done\n            if (matcher(current.value)) break\n\n            // Otherwise, advance both of the pointers\n            previous = current\n            current = current.next\n        }\n\n        // If we got the first item, adjust the first pointer\n        if (current && current.id == this.first.id)\n            this.first = this.first.next\n\n        // If we got the last item, adjust the last pointer\n        if (current && current.id == this.last.id)\n            this.last = previous\n\n        // If we got an item, fix the list and return the item\n        if (current) {\n            this.length--\n            if (previous) previous.next = current.next\n            return current.item\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/queue.js"],"sourceRoot":""}